{
  "version": 3,
  "sources": ["../../../../src/mongodb/computeSalesAndTurnover.ts"],
  "sourcesContent": ["import { ShopModel } from '@src/types/shop-model';\nimport dayjs from 'dayjs';\nimport { Document, WithId } from 'mongodb';\nimport { getShopsCollection } from './collections';\n\nexport function lookupProducts(): Document {\n  const document = {\n    $lookup: {\n      from: 'products',\n      localField: '_id',\n      foreignField: 'shopId',\n      as: 'products',\n    },\n  };\n\n  return document;\n}\n\nexport function lookupSales(from: number, to?: number): Document {\n  const document = {\n    $lookup: {\n      from: 'sales',\n      localField: 'products.url',\n      foreignField: 'productUrl',\n      let: { shopId: '$_id' },\n      pipeline: [\n        {\n          $match: {\n            $expr: {\n              $and: [\n                { $eq: ['$shopId', '$$shopId'] },\n                { $gte: ['$date', from] },\n                ...(to ? [{ $lte: ['$date', to] }] : []),\n              ],\n            },\n          },\n        },\n        {\n          $sort: { date: 1 },\n        },\n      ],\n      as: 'sales',\n    },\n  };\n\n  return document;\n}\n\nexport function projectPopulate(productsLimit: number): Document {\n  const document = {\n    $project: {\n      id: {\n        $toString: '$_id',\n      },\n      url: 1,\n      name: 1,\n      logo: 1,\n      about: 1,\n      currency: 1,\n      theme: 1,\n      sales: 1,\n      createdAt: 1,\n      products: {\n        $let: {\n          vars: {\n            array: {\n              $sortArray: {\n                input: {\n                  $map: {\n                    input: '$products',\n                    as: 'product',\n                    in: {\n                      $let: {\n                        vars: {\n                          sales: {\n                            $filter: {\n                              input: '$sales',\n                              as: 'sale',\n                              cond: {\n                                $eq: ['$$sale.productUrl', '$$product.url'],\n                              },\n                            },\n                          },\n                        },\n                        in: {\n                          url: '$$product.url',\n                          name: '$$product.name',\n                          image: '$$product.image',\n                          price: '$$product.price',\n                          createdAt: '$$product.createdAt',\n                          sales: '$$sales',\n                          totalSales: {\n                            $reduce: {\n                              input: '$$sales',\n                              initialValue: 0,\n                              in: { $add: ['$$value', '$$this.count'] },\n                            },\n                          },\n                        },\n                      },\n                    },\n                  },\n                },\n                sortBy: { totalSales: -1 },\n              },\n            },\n          },\n          in: {\n            array: { $slice: ['$$array', productsLimit] },\n            total: {\n              $reduce: {\n                input: '$$array',\n                initialValue: { sales: 0, turnover: 0 },\n                in: {\n                  sales: {\n                    $add: ['$$value.sales', '$$this.totalSales'],\n                  },\n                  turnover: {\n                    $add: [\n                      '$$value.turnover',\n                      { $multiply: ['$$this.price', '$$this.totalSales'] },\n                    ],\n                  },\n                },\n              },\n            },\n          },\n        },\n      },\n    },\n  };\n\n  return document;\n}\n\ninterface ProjectCleanProps {\n  removeProductsArray?: boolean;\n}\n\nexport function projectClean({\n  removeProductsArray = false,\n}: ProjectCleanProps = {}): Document {\n  const document = {\n    $project: {\n      _id: 0,\n      sales: 0,\n      products: {\n        _id: 0,\n        shopId: 0,\n        array: removeProductsArray\n          ? 0\n          : {\n              sales: {\n                _id: 0,\n                shopId: 0,\n                productUrl: 0,\n              },\n            },\n      },\n    },\n  };\n\n  return document;\n}\n\nexport const computeSalesAndTurnover = async (shop: WithId<ShopModel>) => {\n  const { url, updatedAt } = shop;\n\n  const timeSinceLastUpdate = dayjs().diff(dayjs.unix(updatedAt), 'h');\n  const shouldUpdateProductsTotal = !updatedAt || timeSinceLastUpdate >= 1;\n\n  if (!shouldUpdateProductsTotal) return;\n\n  const shopsCollection = getShopsCollection();\n  const data = await shopsCollection\n    .aggregate([\n      {\n        $match: { url },\n      },\n      ...[lookupProducts(), lookupSales(updatedAt), projectPopulate(0)],\n      projectClean({ removeProductsArray: true }),\n    ])\n    .toArray();\n\n  const shopData = data[0] as ShopModel;\n\n  shop.turnover += shopData.products?.total.turnover || 0;\n  shop.sales += shopData.products?.total.sales || 0;\n  shop.updatedAt = dayjs().unix();\n\n  await shopsCollection.updateOne({ _id: shop._id }, { $set: shop });\n};\n"],
  "mappings": "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",
  "names": ["dayjs"]
}

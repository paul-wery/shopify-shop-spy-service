{
  "version": 3,
  "sources": ["../../../../src/heroku/index.ts"],
  "sourcesContent": ["import axios from 'axios';\n\nconst HEROKU_APP = process.env.HEROKU_APP;\nconst HEROKU_TOKEN = process.env.HEROKU_TOKEN;\n\nconst options = {\n  headers: {\n    Accept: 'application/vnd.heroku+json; version=3',\n    Authorization: `Bearer ${HEROKU_TOKEN}`,\n  },\n};\n\nconst command = 'npm run start';\n\nexport async function getDynos() {\n  try {\n    const response = await axios(\n      `https://api.heroku.com/apps/${HEROKU_APP}/dynos`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\nexport async function stopDynos() {\n  try {\n    const dynos = await getDynos();\n\n    for (const dyno of dynos) {\n      await axios.post(\n        `https://api.heroku.com/apps/${HEROKU_APP}/dynos/${dyno.id}/actions/stop`,\n        {},\n        options\n      );\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function startDyno() {\n  try {\n    await axios.post(\n      `https://api.heroku.com/apps/${HEROKU_APP}/dynos`,\n      { command },\n      options\n    );\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAElB,MAAM,aAAa,QAAQ,IAAI;AAC/B,MAAM,eAAe,QAAQ,IAAI;AAEjC,MAAM,UAAU;AAAA,EACd,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,eAAe,UAAU;AAAA,EAC3B;AACF;AAEA,MAAM,UAAU;AAEhB,eAAsB,WAAW;AAC/B,MAAI;AACF,UAAM,WAAW,UAAM,aAAAA;AAAA,MACrB,+BAA+B;AAAA,MAC/B;AAAA,IACF;AAEA,WAAO,SAAS;AAAA,EAClB,SAAS,OAAP;AACA,YAAQ,MAAM,KAAK;AACnB,WAAO,CAAC;AAAA,EACV;AACF;AAEA,eAAsB,YAAY;AAChC,MAAI;AACF,UAAM,QAAQ,MAAM,SAAS;AAE7B,eAAW,QAAQ,OAAO;AACxB,YAAM,aAAAA,QAAM;AAAA,QACV,+BAA+B,oBAAoB,KAAK;AAAA,QACxD,CAAC;AAAA,QACD;AAAA,MACF;AAAA,IACF;AAAA,EACF,SAAS,OAAP;AACA,YAAQ,MAAM,KAAK;AAAA,EACrB;AACF;AAEA,eAAsB,YAAY;AAChC,MAAI;AACF,UAAM,aAAAA,QAAM;AAAA,MACV,+BAA+B;AAAA,MAC/B,EAAE,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF,SAAS,OAAP;AACA,YAAQ,MAAM,KAAK;AAAA,EACrB;AACF;",
  "names": ["axios"]
}

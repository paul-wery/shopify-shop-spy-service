{
  "version": 3,
  "sources": ["../../../../src/tiktok-ads/startCollectAdsDetails.ts"],
  "sourcesContent": ["import { getTiktokAdsCollection } from '@src/mongodb/collections';\nimport { getTiktokCredentials } from './get-tiktok-credentials';\nimport { collectAdDetails } from './collect-ad-details';\n\nexport async function startCollectAdsDetails() {\n  const collection = getTiktokAdsCollection();\n  const ads = await collection\n    .find({\n      landingPageUrl: { $exists: false },\n      detailsNotFound: { $ne: true },\n    })\n    .toArray();\n  const credentials = await getTiktokCredentials();\n  let count = 0;\n  let errorCount = 0;\n\n  if (!credentials) {\n    console.error('Failed to get Tiktok Credentials');\n    return false;\n  }\n\n  for (const ad of ads) {\n    try {\n      const detailsData = await collectAdDetails(ad.adId, credentials);\n\n      await collection.updateOne({ _id: ad._id }, { $set: detailsData });\n    } catch {\n      errorCount++;\n    } finally {\n      await collection.updateOne(\n        { _id: ad._id },\n        { $set: { detailsNotFound: true } }\n      );\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n    }\n    process.stdout.write(\n      `Processed: ${++count}/${ads.length} - Error: ${errorCount}\\r`\n    );\n  }\n  return true;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuC;AACvC,oCAAqC;AACrC,gCAAiC;AAEjC,eAAsB,yBAAyB;AAC7C,QAAM,iBAAa,2CAAuB;AAC1C,QAAM,MAAM,MAAM,WACf,KAAK;AAAA,IACJ,gBAAgB,EAAE,SAAS,MAAM;AAAA,IACjC,iBAAiB,EAAE,KAAK,KAAK;AAAA,EAC/B,CAAC,EACA,QAAQ;AACX,QAAM,cAAc,UAAM,oDAAqB;AAC/C,MAAI,QAAQ;AACZ,MAAI,aAAa;AAEjB,MAAI,CAAC,aAAa;AAChB,YAAQ,MAAM,kCAAkC;AAChD,WAAO;AAAA,EACT;AAEA,aAAW,MAAM,KAAK;AACpB,QAAI;AACF,YAAM,cAAc,UAAM,4CAAiB,GAAG,MAAM,WAAW;AAE/D,YAAM,WAAW,UAAU,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE,MAAM,YAAY,CAAC;AAAA,IACnE,QAAE;AACA;AAAA,IACF,UAAE;AACA,YAAM,WAAW;AAAA,QACf,EAAE,KAAK,GAAG,IAAI;AAAA,QACd,EAAE,MAAM,EAAE,iBAAiB,KAAK,EAAE;AAAA,MACpC;AACA,YAAM,IAAI,QAAQ,CAAC,YAAY,WAAW,SAAS,GAAI,CAAC;AAAA,IAC1D;AACA,YAAQ,OAAO;AAAA,MACb,cAAc,EAAE,SAAS,IAAI,mBAAmB;AAAA,IAClD;AAAA,EACF;AACA,SAAO;AACT;",
  "names": []
}

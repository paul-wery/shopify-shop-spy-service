{
  "version": 3,
  "sources": ["../../../../src/tiktok-ads/deleteCorruptedVideos.ts"],
  "sourcesContent": ["import { getTiktokAdsCollection } from '@src/mongodb/collections';\nimport { arrayToChunks } from '@src/tools/arrayToChunks';\nimport { getStorage } from 'firebase-admin/storage';\n\nexport async function deleteCorruptedVideos() {\n  const collection = getTiktokAdsCollection();\n  const ads = await collection.find({}).toArray();\n\n  console.info(`${ads.length} videos to check`);\n\n  const chunkSize = 10;\n  const chunks = arrayToChunks(ads, chunkSize);\n  const storage = getStorage().bucket();\n  let count = 0;\n\n  for (let index = 0; index < chunks.length; index++) {\n    const chunk = chunks[index];\n\n    await Promise.all(\n      chunk.map(async (ad) => {\n        try {\n          const ref = storage.file(`tiktok-ads/${ad.adId}.mp4`);\n          const video = (await ref.getMetadata())[0];\n\n          if (parseInt(video.size) < 1000) {\n            count++;\n            await ref.delete();\n            await collection.deleteOne({ _id: ad._id });\n            process.stdout.write(`${count} videos deleted \\r`);\n          }\n        } catch (error) {\n          console.error(`Error checking ${ad.adId} video (deleting ad)`);\n          count++;\n          await collection.deleteOne({ _id: ad._id });\n        }\n      })\n    );\n    process.stdout.write(\n      `Chunk ${index + 1}/${chunks.length} - ${count} videos deleted \\r`\n    );\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuC;AACvC,2BAA8B;AAC9B,qBAA2B;AAE3B,eAAsB,wBAAwB;AAC5C,QAAM,iBAAa,2CAAuB;AAC1C,QAAM,MAAM,MAAM,WAAW,KAAK,CAAC,CAAC,EAAE,QAAQ;AAE9C,UAAQ,KAAK,GAAG,IAAI,wBAAwB;AAE5C,QAAM,YAAY;AAClB,QAAM,aAAS,oCAAc,KAAK,SAAS;AAC3C,QAAM,cAAU,2BAAW,EAAE,OAAO;AACpC,MAAI,QAAQ;AAEZ,WAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAClD,UAAM,QAAQ,OAAO,KAAK;AAE1B,UAAM,QAAQ;AAAA,MACZ,MAAM,IAAI,OAAO,OAAO;AACtB,YAAI;AACF,gBAAM,MAAM,QAAQ,KAAK,cAAc,GAAG,UAAU;AACpD,gBAAM,SAAS,MAAM,IAAI,YAAY,GAAG,CAAC;AAEzC,cAAI,SAAS,MAAM,IAAI,IAAI,KAAM;AAC/B;AACA,kBAAM,IAAI,OAAO;AACjB,kBAAM,WAAW,UAAU,EAAE,KAAK,GAAG,IAAI,CAAC;AAC1C,oBAAQ,OAAO,MAAM,GAAG,yBAAyB;AAAA,UACnD;AAAA,QACF,SAAS,OAAP;AACA,kBAAQ,MAAM,kBAAkB,GAAG,0BAA0B;AAC7D;AACA,gBAAM,WAAW,UAAU,EAAE,KAAK,GAAG,IAAI,CAAC;AAAA,QAC5C;AAAA,MACF,CAAC;AAAA,IACH;AACA,YAAQ,OAAO;AAAA,MACb,SAAS,QAAQ,KAAK,OAAO,YAAY;AAAA,IAC3C;AAAA,EACF;AACF;",
  "names": []
}

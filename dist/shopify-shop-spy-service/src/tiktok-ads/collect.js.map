{
  "version": 3,
  "sources": ["../../../../src/tiktok-ads/collect.ts"],
  "sourcesContent": ["import { estimateBudget, estimateViews } from '@src/tools/estimate';\nimport { TiktokCredentials } from '@src/types/credentials';\nimport { TiktokAdModel } from '@src/types/tiktok-ad-model';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\n\nconst TIKTOK_ADS_URL =\n  'https://ads.tiktok.com/creative_radar_api/v1/top_ads/v2/list';\n\ninterface TiktokPagination {\n  has_more: boolean;\n  page: number;\n  size: number;\n  total_count: number;\n}\n\ninterface TiktokResponse {\n  data: {\n    materials: {\n      ad_title: string;\n      brand_name: string;\n      cost: number;\n      ctr: number;\n      favorite: boolean;\n      id: string;\n      industry_key: string;\n      is_search: boolean;\n      like: number;\n      objective_key: string;\n      tag: number;\n      video_info: {\n        vid: string;\n        duration: number;\n        cover: string;\n        video_url: Record<string, string>;\n        width: number;\n        height: number;\n      };\n    }[];\n    pagination: TiktokPagination;\n  };\n}\n\ninterface CollectTiktokAdsParams {\n  page: number;\n  keyword?: string;\n  country_code?: string;\n  ad_language?: string;\n  industry: string;\n  credentials: TiktokCredentials;\n\n  period?: number;\n  limit?: number;\n  order_by?: string;\n}\n\nconst DEFAULT_PARAMS: Partial<CollectTiktokAdsParams> = {\n  keyword: '',\n  period: 30,\n  limit: 20,\n  order_by: 'for_you',\n};\n\nfunction convertResponseToTiktokAdModelArray(\n  response: TiktokResponse,\n  language: string\n): Omit<TiktokAdModel, 'id' | 'comments' | 'shares' | 'landingPageUrl'>[] {\n  const now = dayjs().unix();\n\n  return response.data.materials.map((e) => ({\n    adId: e.id,\n    likes: e.like,\n    ctr: e.ctr,\n    budgetEnum: e.cost,\n\n    title: e.ad_title,\n    brandName: e.brand_name,\n    industryKey: e.industry_key,\n    industryGroupCode: e.industry_key.replace('label_', '').slice(0, 2),\n    language,\n    objectiveKey: e.objective_key,\n    videoInfo: {\n      id: e.video_info.vid,\n      cover: e.video_info.cover,\n      urls: e.video_info.video_url,\n      width: e.video_info.width,\n      height: e.video_info.height,\n      duration: e.video_info.duration,\n    },\n\n    views: estimateViews(e.like),\n    budget: estimateBudget(e.like),\n    updatedAt: now,\n    createdAt: now,\n  }));\n}\n\nfunction transformIndustryCode(code: string) {\n  const shape = '00000000000';\n\n  return code + shape.slice(code.length);\n}\n\nasync function _collectTiktokAds(_params: CollectTiktokAdsParams) {\n  const params = { ...DEFAULT_PARAMS, ..._params };\n  const url = new URL(TIKTOK_ADS_URL);\n\n  url.searchParams.append('period', String(params.period));\n  if (params.keyword) url.searchParams.append('keyword', params.keyword);\n  url.searchParams.append('page', String(params.page));\n  url.searchParams.append('limit', String(params.limit));\n  url.searchParams.append('order_by', params.order_by!);\n  if (params.country_code)\n    url.searchParams.append('country_code', params.country_code);\n  if (params.ad_language)\n    url.searchParams.append('ad_language', params.ad_language);\n  url.searchParams.append('industry', transformIndustryCode(params.industry));\n\n  const response = await axios.get(url.href, {\n    headers: {\n      'user-sign': params.credentials.userSign,\n      'web-id': params.credentials.webId,\n      timestamp: params.credentials.timestamp,\n    },\n  });\n\n  if (!response.data.data) {\n    console.error(`Error: ${response}`);\n    console.error(`Code: ${response.data?.code}`);\n    console.error(`Message: ${response.data?.msg}`);\n  }\n\n  const data = response.data as TiktokResponse;\n  const pagination = data.data.pagination;\n\n  return {\n    data: convertResponseToTiktokAdModelArray(data, params.ad_language),\n    pagination,\n  };\n}\n\nconst MAX_RETRY = 3;\n\nexport async function collectTiktokAds(\n  _params: CollectTiktokAdsParams,\n  retry = 0\n) {\n  if (retry) console.info(`Retrying collectTiktokAds... (${retry})`);\n  try {\n    return await _collectTiktokAds(_params);\n  } catch {\n    if (retry >= MAX_RETRY)\n      throw new Error('Max retry collectTiktokAds reached');\n    return await collectTiktokAds(_params, retry + 1);\n  }\n}\n"],
  "mappings": "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",
  "names": ["dayjs", "axios"]
}

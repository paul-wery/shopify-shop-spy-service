{
  "version": 3,
  "sources": ["../../../../src/tiktok-ads/uploadMissingVideos.ts"],
  "sourcesContent": ["import { uploadVideos } from '@src/firebase/uploadTiktokAdVideo';\nimport { getTiktokAdsCollection } from '@src/mongodb/collections';\nimport { arrayToChunks } from '@src/tools/arrayToChunks';\nimport { TiktokAdModel } from '@src/types/tiktok-ad-model';\nimport { getStorage } from 'firebase-admin/storage';\nimport { WithId } from 'mongodb';\n\nexport async function uploadMissingVideos() {\n  const collection = getTiktokAdsCollection();\n  const ads = await collection.find({ videoUploaded: { $ne: true } }).toArray();\n\n  console.info(`${ads.length} unchecked videos`);\n\n  const chunkSize = 10;\n  const chunks = arrayToChunks(ads, chunkSize);\n  const storage = getStorage().bucket();\n  const toUpload: WithId<TiktokAdModel>[] = [];\n\n  for (let index = 0; index < chunks.length; index++) {\n    const chunk = chunks[index];\n\n    const result = await Promise.all(\n      chunk.map(async (ad) => {\n        const exists = await storage.file(`tiktok-ads/${ad.adId}.mp4`).exists();\n\n        if (exists[0]) {\n          await collection.updateOne(\n            { _id: ad._id },\n            { $set: { videoUploaded: true } }\n          );\n          return null;\n        }\n        return ad;\n      })\n    );\n\n    toUpload.push(...result.filter(Boolean));\n    process.stdout.write(\n      `Missing videos: ${toUpload.length} / Chunk ${index + 1}/${\n        chunks.length\n      }\\r`\n    );\n  }\n  await uploadVideos(toUpload);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6B;AAC7B,yBAAuC;AACvC,2BAA8B;AAE9B,qBAA2B;AAG3B,eAAsB,sBAAsB;AAC1C,QAAM,iBAAa,2CAAuB;AAC1C,QAAM,MAAM,MAAM,WAAW,KAAK,EAAE,eAAe,EAAE,KAAK,KAAK,EAAE,CAAC,EAAE,QAAQ;AAE5E,UAAQ,KAAK,GAAG,IAAI,yBAAyB;AAE7C,QAAM,YAAY;AAClB,QAAM,aAAS,oCAAc,KAAK,SAAS;AAC3C,QAAM,cAAU,2BAAW,EAAE,OAAO;AACpC,QAAM,WAAoC,CAAC;AAE3C,WAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAClD,UAAM,QAAQ,OAAO,KAAK;AAE1B,UAAM,SAAS,MAAM,QAAQ;AAAA,MAC3B,MAAM,IAAI,OAAO,OAAO;AACtB,cAAM,SAAS,MAAM,QAAQ,KAAK,cAAc,GAAG,UAAU,EAAE,OAAO;AAEtE,YAAI,OAAO,CAAC,GAAG;AACb,gBAAM,WAAW;AAAA,YACf,EAAE,KAAK,GAAG,IAAI;AAAA,YACd,EAAE,MAAM,EAAE,eAAe,KAAK,EAAE;AAAA,UAClC;AACA,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAEA,aAAS,KAAK,GAAG,OAAO,OAAO,OAAO,CAAC;AACvC,YAAQ,OAAO;AAAA,MACb,mBAAmB,SAAS,kBAAkB,QAAQ,KACpD,OAAO;AAAA,IAEX;AAAA,EACF;AACA,YAAM,yCAAa,QAAQ;AAC7B;",
  "names": []
}

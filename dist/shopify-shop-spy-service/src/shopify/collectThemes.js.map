{
  "version": 3,
  "sources": ["../../../../src/shopify/collectThemes.ts"],
  "sourcesContent": ["import { getThemesCollection } from '@src/mongodb/collections';\nimport { ShopifyTheme } from '@src/types/shopifyTheme';\nimport axios from 'axios';\n\nconst shopifyThemesRootUrl = 'https://themes.shopify.com';\nconst shopifyThemesUrl = `${shopifyThemesRootUrl}/themes?page=`;\nconst themesCounterRegex = /\\d+\\s*-\\s*(\\d+)\\s*of\\s*(\\d+)\\s*themes/;\nconst themesDataRegex = /data-theme-id=\"([^\"]+)\".+?(?<=href)=\"([^\"]+)\"/g;\n\nexport async function collectThemes() {\n  let allThemesChecked = false;\n  const themes: ShopifyTheme[] = [];\n\n  for (let index = 1; !allThemesChecked; index++) {\n    const pageUrl = `${shopifyThemesUrl}${index}`;\n    const response = await axios.get(pageUrl);\n    const json = response.data as string;\n\n    const [, currentThemesCountStr, maxThemesCountStr] =\n      json.match(themesCounterRegex);\n    const currentThemesCount = Number(currentThemesCountStr);\n    const maxThemesCount = Number(maxThemesCountStr);\n    const themesData = json.matchAll(themesDataRegex);\n\n    for (const [, themeId, themeUrl] of themesData) {\n      if (!themes.find((t) => t.id === themeId)) {\n        themes.push({ id: themeId, url: `${shopifyThemesRootUrl}${themeUrl}` });\n      }\n    }\n\n    if (currentThemesCount >= maxThemesCount) allThemesChecked = true;\n  }\n\n  const themesCollection = getThemesCollection();\n\n  await Promise.all(\n    themes.map((theme) =>\n      themesCollection.updateOne(\n        { id: theme.id },\n        { $set: { id: theme.id, url: theme.url.split('?')[0] } },\n        { upsert: true }\n      )\n    )\n  );\n  console.info(`[ collectThemes ] ${themes.length} themes collected`);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAoC;AAEpC,mBAAkB;AAElB,MAAM,uBAAuB;AAC7B,MAAM,mBAAmB,GAAG;AAC5B,MAAM,qBAAqB;AAC3B,MAAM,kBAAkB;AAExB,eAAsB,gBAAgB;AACpC,MAAI,mBAAmB;AACvB,QAAM,SAAyB,CAAC;AAEhC,WAAS,QAAQ,GAAG,CAAC,kBAAkB,SAAS;AAC9C,UAAM,UAAU,GAAG,mBAAmB;AACtC,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,OAAO;AACxC,UAAM,OAAO,SAAS;AAEtB,UAAM,CAAC,EAAE,uBAAuB,iBAAiB,IAC/C,KAAK,MAAM,kBAAkB;AAC/B,UAAM,qBAAqB,OAAO,qBAAqB;AACvD,UAAM,iBAAiB,OAAO,iBAAiB;AAC/C,UAAM,aAAa,KAAK,SAAS,eAAe;AAEhD,eAAW,CAAC,EAAE,SAAS,QAAQ,KAAK,YAAY;AAC9C,UAAI,CAAC,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,OAAO,GAAG;AACzC,eAAO,KAAK,EAAE,IAAI,SAAS,KAAK,GAAG,uBAAuB,WAAW,CAAC;AAAA,MACxE;AAAA,IACF;AAEA,QAAI,sBAAsB;AAAgB,yBAAmB;AAAA,EAC/D;AAEA,QAAM,uBAAmB,wCAAoB;AAE7C,QAAM,QAAQ;AAAA,IACZ,OAAO;AAAA,MAAI,CAAC,UACV,iBAAiB;AAAA,QACf,EAAE,IAAI,MAAM,GAAG;AAAA,QACf,EAAE,MAAM,EAAE,IAAI,MAAM,IAAI,KAAK,MAAM,IAAI,MAAM,GAAG,EAAE,CAAC,EAAE,EAAE;AAAA,QACvD,EAAE,QAAQ,KAAK;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AACA,UAAQ,KAAK,qBAAqB,OAAO,yBAAyB;AACpE;",
  "names": ["axios"]
}

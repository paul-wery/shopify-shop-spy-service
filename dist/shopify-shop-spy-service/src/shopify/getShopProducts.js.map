{
  "version": 3,
  "sources": ["../../../../src/shopify/getShopProducts.ts"],
  "sourcesContent": ["import configuration from '@src/configuration';\nimport { updateShopStatus } from '@src/mongodb/updateShop';\nimport { poolRequest } from '@src/proxy/index';\nimport { ShopifyProduct } from '@src/types/index';\nimport { ShopModel, ShopStatus } from '@src/types/shop-model';\nimport { WithId } from 'mongodb';\n\n// LIMIT BY PAGE FOR SHOPIFY API\nconst LIMIT_BY_PAGE = 250;\nconst MAX_SHOP_PRODUCTS = configuration.limits.maxShopProducts;\nconst PAGE_LIMIT = MAX_SHOP_PRODUCTS / LIMIT_BY_PAGE;\n\nconst average: Record<string, number> = {};\n\nasync function handleExceedLimit(\n  shop: WithId<ShopModel>,\n  products: ShopifyProduct[]\n) {\n  if (products.length >= MAX_SHOP_PRODUCTS) {\n    await updateShopStatus(shop, ShopStatus.OUT_OF_LIMIT);\n    return [];\n  }\n  return products;\n}\n\nexport const getShopProducts = async (shop: WithId<ShopModel>) => {\n  const url = shop.url;\n  const products: ShopifyProduct[] = [];\n\n  let limitReached = false;\n  let page = 1;\n\n  while (!limitReached && page <= PAGE_LIMIT) {\n    const response = await poolRequest.get(\n      `${url}/products.json?page=${page}&limit=${LIMIT_BY_PAGE}`\n    );\n    const _products: ShopifyProduct[] = response.data.products;\n\n    products.push(..._products);\n    page++;\n    if (_products.length < LIMIT_BY_PAGE) limitReached = true;\n  }\n  console.log(\n    `[ ${url} ] : ${products.length} products / rounded to ${\n      (page - 1) * LIMIT_BY_PAGE\n    } products`\n  );\n  average[url] = (page - 1) * LIMIT_BY_PAGE;\n  console.log(\n    'Average : ',\n    Object.values(average).reduce((a, b) => a + b, 0) /\n      Object.values(average).length\n  );\n\n  return handleExceedLimit(shop, products);\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B;AAC1B,wBAAiC;AACjC,mBAA4B;AAE5B,wBAAsC;AAItC,MAAM,gBAAgB;AACtB,MAAM,oBAAoB,qBAAAA,QAAc,OAAO;AAC/C,MAAM,aAAa,oBAAoB;AAEvC,MAAM,UAAkC,CAAC;AAEzC,eAAe,kBACb,MACA,UACA;AACA,MAAI,SAAS,UAAU,mBAAmB;AACxC,cAAM,oCAAiB,MAAM,6BAAW,YAAY;AACpD,WAAO,CAAC;AAAA,EACV;AACA,SAAO;AACT;AAEO,MAAM,kBAAkB,OAAO,SAA4B;AAChE,QAAM,MAAM,KAAK;AACjB,QAAM,WAA6B,CAAC;AAEpC,MAAI,eAAe;AACnB,MAAI,OAAO;AAEX,SAAO,CAAC,gBAAgB,QAAQ,YAAY;AAC1C,UAAM,WAAW,MAAM,yBAAY;AAAA,MACjC,GAAG,0BAA0B,cAAc;AAAA,IAC7C;AACA,UAAM,YAA8B,SAAS,KAAK;AAElD,aAAS,KAAK,GAAG,SAAS;AAC1B;AACA,QAAI,UAAU,SAAS;AAAe,qBAAe;AAAA,EACvD;AACA,UAAQ;AAAA,IACN,KAAK,WAAW,SAAS,iCACtB,OAAO,KAAK;AAAA,EAEjB;AACA,UAAQ,GAAG,KAAK,OAAO,KAAK;AAC5B,UAAQ;AAAA,IACN;AAAA,IACA,OAAO,OAAO,OAAO,EAAE,OAAO,CAAC,GAAG,MAAM,IAAI,GAAG,CAAC,IAC9C,OAAO,OAAO,OAAO,EAAE;AAAA,EAC3B;AAEA,SAAO,kBAAkB,MAAM,QAAQ;AACzC;",
  "names": ["configuration"]
}

{
  "version": 3,
  "sources": ["../../../../src/shopify/collectApps.ts"],
  "sourcesContent": ["import { updateApps } from '@src/mongodb/updateApp';\nimport { AppModel } from '@src/types/app-model';\nimport playwright, { Page } from 'playwright';\n\nconst shopifyAppsRootUrl = 'https://apps.shopify.com';\nconst shopifyAppsUrl = `${shopifyAppsRootUrl}/search?sort_by=popular`;\nconst categoriesRegex = /<input.+?(?<=id=\"categories_\").*\\svalue=\"([^\"]+)/gm;\nconst appsBlockRegex =\n  /<a[^>]+?(?<=data-app-link-details).+?(?<=total reviews)/gm;\nconst appsRegex =\n  /href=\"([^\"]+)\"[^>]+?(?<=data-app-link-details)[^>]*>([^<]+).+?(?<=<span>)\\s*(\\d.\\d).+?(?=\\(\\d)\\(([^)]+)/;\nconst appsWithoutRatingRegex =\n  /href=\"([^\"]+)\"[^>]+?(?<=data-app-link-details)[^>]*>([^<]+)/;\n\nfunction collectCategories(html: string) {\n  const categories = [...html.matchAll(categoriesRegex)].map((e) => e[1]);\n\n  return categories.filter((e, index) => categories.indexOf(e) === index);\n}\n\ninterface Options {\n  search?: string;\n  category?: string;\n}\n\nasync function collectPageApps(page: Page, options: Options = {}) {\n  const { search, category } = {\n    search: 'all',\n    category: undefined,\n    ...options,\n  };\n  const apps: Partial<AppModel>[] = [];\n  let newApps: Partial<AppModel>[] = [];\n\n  for (let index = 1; newApps.length > 0 || index === 1; index++) {\n    const response = await page.goto(\n      `${shopifyAppsUrl}&q=${search}${\n        category ? `&categories%5B%5D=${category}` : ''\n      }&page=${index}`\n    );\n    await page.waitForLoadState('networkidle');\n\n    const html = (await page.content()).replace(/\\r|\\n/g, '');\n    const tooManyRequests = response.status() === 429;\n\n    if (tooManyRequests) {\n      console.info('Too many requests waiting 1 minute');\n      await new Promise((resolve) => setTimeout(resolve, 60000));\n      index--;\n    } else {\n      const blocks = [...html.matchAll(appsBlockRegex)].map((e) => e[0]);\n      const matchs = blocks.map(\n        (e) => e.match(appsRegex) || e.match(appsWithoutRatingRegex)\n      );\n\n      newApps = matchs.map((e) => {\n        return {\n          handle: e[1].replace(shopifyAppsRootUrl + '/', '').split('?')[0],\n          name: e[2].trim(),\n          rating: e[3] ? parseFloat(e[3].replace(',', '.')) : undefined,\n          reviewsCount: e[4] ? parseInt(e[4].replace(/,/g, '')) : undefined,\n          category,\n        };\n      });\n\n      if (newApps.length > 0) await updateApps(newApps);\n      console.info('new apps updated', newApps.length);\n      apps.push(...newApps);\n    }\n  }\n  return apps;\n}\n\nconst keywords = ['reviews', 'dropshipping', 'cart', 'upsell', 'email', 'seo'];\n\nexport async function collectApps() {\n  const browser = await playwright.chromium.launch({ headless: false });\n  const context = await browser.newContext({ locale: 'en' });\n\n  const page = await context.newPage();\n\n  await page.goto(`${shopifyAppsUrl}&q=all`);\n  await page.waitForLoadState('networkidle');\n\n  const categories = collectCategories(await page.content());\n\n  console.info('categories', categories);\n  for (const keyword of keywords) {\n    for (const category of categories) {\n      await collectPageApps(page, { search: keyword, category });\n    }\n  }\n  console.info('Done CollectApps!');\n}\n"],
  "mappings": "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",
  "names": ["playwright"]
}

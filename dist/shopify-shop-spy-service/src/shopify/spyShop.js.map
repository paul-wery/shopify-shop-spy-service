{
  "version": 3,
  "sources": ["../../../../src/shopify/spyShop.ts"],
  "sourcesContent": ["import { updateShop } from '@src/mongodb/updateShop';\nimport { ShopifyProduct } from '@src/types';\nimport { ShopModel } from '@src/types/shop-model';\nimport { ShopProductModel } from '@src/types/shop-product-model';\nimport dayjs from 'dayjs';\nimport { ObjectId, WithId } from 'mongodb';\nimport { getShopProducts } from './getShopProducts';\nimport { ShopProductSaleModel } from '@src/types/shop-product-sales-model';\nimport { getShopsCollection } from '@src/mongodb/collections';\n\nfunction shopifyProductToProductModel(\n  shopId: ObjectId,\n  product: ShopifyProduct\n): ShopProductModel {\n  return {\n    shopId,\n    url: product.handle,\n    name: product.title,\n    image: product.images[0]?.src,\n    price: parseFloat(product.variants[0].price),\n    createdAt: dayjs(product.published_at).unix(),\n  } as ShopProductModel;\n}\n\nconst updateProductSalesData = (\n  shop: WithId<ShopModel>,\n  shopifyProduct: ShopifyProduct,\n  currentHour: number\n): ShopProductSaleModel => {\n  const variants = shopifyProduct.variants;\n  let count = 0;\n\n  if (shop.lastUpdate) {\n    for (const variant of variants) {\n      if (shop.lastUpdate < dayjs(variant.updated_at).unix()) {\n        count += 1;\n      }\n    }\n  }\n  return {\n    shopId: shop._id,\n    productUrl: shopifyProduct.handle,\n    count,\n    date: currentHour,\n  };\n};\n\nasync function createMissingOrUpdateProducts(shop: WithId<ShopModel>) {\n  const shopifyProducts = await getShopProducts(shop);\n  const currentTime = dayjs().unix();\n  const currentHour = dayjs().startOf('hour').unix();\n  const products: ShopProductModel[] = [];\n  const sales: ShopProductSaleModel[] = [];\n\n  for (let index = 0; index < shopifyProducts.length; index++) {\n    const shopifyProduct = shopifyProducts[index];\n    const newSale = updateProductSalesData(shop, shopifyProduct, currentHour);\n\n    if (newSale.count > 0) {\n      sales.push(newSale);\n      products.push(shopifyProductToProductModel(shop._id, shopifyProduct));\n    }\n  }\n  if (!shop.lastUpdate) {\n    const shopsCollection = getShopsCollection();\n\n    await shopsCollection.updateOne(\n      { _id: shop._id },\n      { $set: { lastUpdate: currentTime } }\n    );\n  } else if (sales.length > 0) {\n    shop.lastUpdate = currentTime;\n    await updateShop(shop, products, sales);\n  }\n}\n\nexport async function spyShop(shop: WithId<ShopModel>) {\n  try {\n    await createMissingOrUpdateProducts(shop);\n  } catch (error) {\n    console.error(`Catched error on shop ${shop.url}`, error.message);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA2B;AAI3B,mBAAkB;AAElB,6BAAgC;AAEhC,yBAAmC;AAEnC,SAAS,6BACP,QACA,SACkB;AAClB,SAAO;AAAA,IACL;AAAA,IACA,KAAK,QAAQ;AAAA,IACb,MAAM,QAAQ;AAAA,IACd,OAAO,QAAQ,OAAO,CAAC,GAAG;AAAA,IAC1B,OAAO,WAAW,QAAQ,SAAS,CAAC,EAAE,KAAK;AAAA,IAC3C,eAAW,aAAAA,SAAM,QAAQ,YAAY,EAAE,KAAK;AAAA,EAC9C;AACF;AAEA,MAAM,yBAAyB,CAC7B,MACA,gBACA,gBACyB;AACzB,QAAM,WAAW,eAAe;AAChC,MAAI,QAAQ;AAEZ,MAAI,KAAK,YAAY;AACnB,eAAW,WAAW,UAAU;AAC9B,UAAI,KAAK,iBAAa,aAAAA,SAAM,QAAQ,UAAU,EAAE,KAAK,GAAG;AACtD,iBAAS;AAAA,MACX;AAAA,IACF;AAAA,EACF;AACA,SAAO;AAAA,IACL,QAAQ,KAAK;AAAA,IACb,YAAY,eAAe;AAAA,IAC3B;AAAA,IACA,MAAM;AAAA,EACR;AACF;AAEA,eAAe,8BAA8B,MAAyB;AACpE,QAAM,kBAAkB,UAAM,wCAAgB,IAAI;AAClD,QAAM,kBAAc,aAAAA,SAAM,EAAE,KAAK;AACjC,QAAM,kBAAc,aAAAA,SAAM,EAAE,QAAQ,MAAM,EAAE,KAAK;AACjD,QAAM,WAA+B,CAAC;AACtC,QAAM,QAAgC,CAAC;AAEvC,WAAS,QAAQ,GAAG,QAAQ,gBAAgB,QAAQ,SAAS;AAC3D,UAAM,iBAAiB,gBAAgB,KAAK;AAC5C,UAAM,UAAU,uBAAuB,MAAM,gBAAgB,WAAW;AAExE,QAAI,QAAQ,QAAQ,GAAG;AACrB,YAAM,KAAK,OAAO;AAClB,eAAS,KAAK,6BAA6B,KAAK,KAAK,cAAc,CAAC;AAAA,IACtE;AAAA,EACF;AACA,MAAI,CAAC,KAAK,YAAY;AACpB,UAAM,sBAAkB,uCAAmB;AAE3C,UAAM,gBAAgB;AAAA,MACpB,EAAE,KAAK,KAAK,IAAI;AAAA,MAChB,EAAE,MAAM,EAAE,YAAY,YAAY,EAAE;AAAA,IACtC;AAAA,EACF,WAAW,MAAM,SAAS,GAAG;AAC3B,SAAK,aAAa;AAClB,cAAM,8BAAW,MAAM,UAAU,KAAK;AAAA,EACxC;AACF;AAEA,eAAsB,QAAQ,MAAyB;AACrD,MAAI;AACF,UAAM,8BAA8B,IAAI;AAAA,EAC1C,SAAS,OAAP;AACA,YAAQ,MAAM,yBAAyB,KAAK,OAAO,MAAM,OAAO;AAAA,EAClE;AACF;",
  "names": ["dayjs"]
}

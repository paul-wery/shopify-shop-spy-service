{
  "version": 3,
  "sources": ["../../../../src/firebase/uploadTiktokAdVideo.ts"],
  "sourcesContent": ["import { getTiktokAdsCollection } from '@src/mongodb/collections';\nimport { arrayToChunks } from '@src/tools/arrayToChunks';\nimport { TiktokAdModel } from '@src/types/tiktok-ad-model';\nimport { getStorage } from 'firebase-admin/storage';\nimport { WithId } from 'mongodb';\n\nexport async function uploadVideos(ads: WithId<TiktokAdModel>[]) {\n  const collection = getTiktokAdsCollection();\n  const chunkSize = 10;\n  const chunks = arrayToChunks(ads, chunkSize);\n\n  const upload = async (ad: TiktokAdModel) => {\n    const url = Object.values(ad.videoInfo.urls)[0];\n    const arrayBuffer = await fetch(url).then((res) => res.arrayBuffer());\n    const storage = getStorage().bucket();\n    const videoRef = storage.file(`tiktok-ads/${ad.adId}.mp4`);\n\n    await videoRef.save(Buffer.from(arrayBuffer));\n  };\n\n  for (let index = 0; index < chunks.length; index++) {\n    const chunk = chunks[index];\n\n    await Promise.all(\n      chunk.map(async (ad) => {\n        let success = false;\n\n        for (let index = 0; index < 3 && !success; index++) {\n          try {\n            if (index > 0) console.info(`Retrying ${index}: ${ad.adId}...`);\n            await upload(ad);\n            if (ad._id) {\n              await collection.updateOne(\n                { _id: ad._id },\n                { $set: { videoUploaded: true } }\n              );\n            }\n            success = true;\n          } catch (error) {\n            if (index === 2) console.error(error);\n          }\n        }\n      })\n    );\n    process.stdout.write(\n      `Uploaded ${index * chunkSize + chunk.length}/${ads.length} videos\\r`\n    );\n  }\n  console.info(`\\nUploaded ${ads.length} videos`);\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAuC;AACvC,2BAA8B;AAE9B,qBAA2B;AAG3B,eAAsB,aAAa,KAA8B;AAC/D,QAAM,iBAAa,2CAAuB;AAC1C,QAAM,YAAY;AAClB,QAAM,aAAS,oCAAc,KAAK,SAAS;AAE3C,QAAM,SAAS,OAAO,OAAsB;AAC1C,UAAM,MAAM,OAAO,OAAO,GAAG,UAAU,IAAI,EAAE,CAAC;AAC9C,UAAM,cAAc,MAAM,MAAM,GAAG,EAAE,KAAK,CAAC,QAAQ,IAAI,YAAY,CAAC;AACpE,UAAM,cAAU,2BAAW,EAAE,OAAO;AACpC,UAAM,WAAW,QAAQ,KAAK,cAAc,GAAG,UAAU;AAEzD,UAAM,SAAS,KAAK,OAAO,KAAK,WAAW,CAAC;AAAA,EAC9C;AAEA,WAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAClD,UAAM,QAAQ,OAAO,KAAK;AAE1B,UAAM,QAAQ;AAAA,MACZ,MAAM,IAAI,OAAO,OAAO;AACtB,YAAI,UAAU;AAEd,iBAASA,SAAQ,GAAGA,SAAQ,KAAK,CAAC,SAASA,UAAS;AAClD,cAAI;AACF,gBAAIA,SAAQ;AAAG,sBAAQ,KAAK,YAAYA,WAAU,GAAG,SAAS;AAC9D,kBAAM,OAAO,EAAE;AACf,gBAAI,GAAG,KAAK;AACV,oBAAM,WAAW;AAAA,gBACf,EAAE,KAAK,GAAG,IAAI;AAAA,gBACd,EAAE,MAAM,EAAE,eAAe,KAAK,EAAE;AAAA,cAClC;AAAA,YACF;AACA,sBAAU;AAAA,UACZ,SAAS,OAAP;AACA,gBAAIA,WAAU;AAAG,sBAAQ,MAAM,KAAK;AAAA,UACtC;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,YAAQ,OAAO;AAAA,MACb,YAAY,QAAQ,YAAY,MAAM,UAAU,IAAI;AAAA,IACtD;AAAA,EACF;AACA,UAAQ,KAAK;AAAA,WAAc,IAAI,eAAe;AAChD;",
  "names": ["index"]
}
